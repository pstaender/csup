// Generated by CoffeeScript 1.7.1
var auth, config, contentTypes, csup, googleapis, request;

request = require('request');

csup = require('./csuplib');

contentTypes = require('./contenttypes');

config = csup.config;

googleapis = require("googleapis");

auth = new googleapis.OAuth2Client(config.clientID, config.clientSecret, config.redirectURL);

googleapis.discover("drive", "v2").execute(function(err, client) {
  var filename, url;
  url = auth.generateAuthUrl({
    scope: config.scope
  });
  auth.credentials = csup.credentials();
  filename = config.filename || csup.defaultFilename();
  config.type = config.type || config.defaultType || contentTypes.getContentType(filename);
  return process.stdin.pipe(request.post({
    url: "https://www.googleapis.com/upload/drive/v2/files",
    headers: {
      Authorization: "Bearer " + config.accessToken,
      "Content-Type": "" + config.type + "; charset=UTF-8"
    }
  }, function(err, res) {
    var body, e, fileId, req, _ref;
    try {
      body = JSON.parse(res.body);
    } catch (_error) {
      e = _error;
      body = null;
    }
    if (err) {
      console.error("Error during upload: ", (err != null ? err.message : void 0) || err || (res != null ? (_ref = res.body) != null ? _ref.error : void 0 : void 0));
      return process.exit(1);
    } else {
      if (body != null ? body.error : void 0) {
        console.error('Error from Google API: ', body != null ? body.error : void 0);
        return process.exit(1);
      } else {
        fileId = body.id;
        req = client.drive.files.update({
          fileId: fileId
        }, {
          title: filename
        });
        return req.withAuthClient(auth).execute(function(err, res) {
          if (err) {
            console.log("* " + fileId);
            console.error('Could not rename uploaded file');
            return process.exit(1);
          } else {
            console.log("* " + fileId + " -> " + res.title);
            return process.exit(0);
          }
        });
      }
    }
  }));
});

//# sourceMappingURL=upload.map
